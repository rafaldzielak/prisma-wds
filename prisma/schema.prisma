// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String          @unique
  isAdmin        Boolean
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoiritePosts Post[]          @relation("FavouritePosts")
  UserPreference UserPreference?

  @@unique([age, name]) //block level attributes (there can only be one person with the same age AND name)
  @@index([email]) //helps with sorting/performance
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id             String     @id @default(uuid())
  title          String
  averageRating  Float
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  author         User       @relation("WrittenPosts", fields: [authorId], references: [id]) //authorId - what field in this table represents the field in other table
  authorId       String
  favouritedBy   User?      @relation("FavouritePosts", fields: [favouritedById], references: [id])
  favouritedById String?
  categories     Category[]

  // @@id([title, authorId]) //composite id (it contains multiple things)
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}
